{"remainingRequest":"/home/Boom/richard/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/Boom/richard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/Boom/richard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/Boom/richard/src/components/Product.vue?vue&type=template&id=3cf4ef6f&","dependencies":[{"path":"/home/Boom/richard/src/components/Product.vue","mtime":1590408160781},{"path":"/home/Boom/richard/node_modules/cache-loader/dist/cjs.js","mtime":1588242611242},{"path":"/home/Boom/richard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1588242612453},{"path":"/home/Boom/richard/node_modules/cache-loader/dist/cjs.js","mtime":1588242611242},{"path":"/home/Boom/richard/node_modules/vue-loader/lib/index.js","mtime":1588242612453}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}